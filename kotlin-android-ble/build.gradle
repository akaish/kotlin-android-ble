apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven'
apply plugin: 'signing'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 30
        versionCode 14
        versionName "0.9.4"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Kotlin related
    implementation "androidx.core:core-ktx:1.6.0"
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.10'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3'
}

group = "net.akaish.kab"
archivesBaseName = "ikey-kab"
version = "0.9.4"

task deleteJar(type: Delete) {
    delete 'libs/jars/'+archivesBaseName+'.'+version+'.jar'
}

task createJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('libs/jars/')
    include('classes.jar')
    rename('classes.jar', archivesBaseName+'.'+version+'.jar')
}

createJar.dependsOn(deleteJar, build)

// Signing
apply plugin: 'signing'
signing {
    sign configurations.archives
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("../javadoc/")
    failOnError false
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from tasks.javadoc.destinationDir
}
//Creating sources with comments
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}
artifacts {
    archives javadocJar
    archives androidSourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            pom.project {
                name "KotlinAndroidBle"
                packaging 'jar'
                description 'KotlinAndroidBle - helper library for running android ble related operations in coroutine context'
                artifactId "ikey-kab"
                url 'https://github.com/akaish/kotlin-android-ble'
                scm {
                    connection 'scm:git:git://github.com/akaish/kotlin-android-ble.git'
                    developerConnection 'scm:git:ssh://github.com/akaish/kotlin-android-ble.git'
                    url 'https://github.com/akaish/kotlin-android-ble/tree/master'
                }
                licenses {
                    license {
                        name 'Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id 'akaish'
                        name 'Denis Bogomolov'
                        email 'akaish@mail.ru'
                    }
                    developer {
                        id 'ikey-ru'
                        name 'Pavel'
                        email 'info@ikey.ru'
                    }
                }
            }
        }
    }
}